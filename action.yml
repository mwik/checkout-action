name: checkout-action
description: GitHub Action for checking out a repository. (Simplified actions/checkout alternative that does not depend on Node.js.)
inputs:
  token:
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.


      We recommend using a service account with the least permissions necessary.
      Also when generating a new PAT, select the least scopes necessary.


      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
  ssh_private_key:
    description: 'SSH key that will be added to ssh-agent'

  persist_credentials:
    description: 'Whether to configure the token or SSH key with the local git config'
    default: true

# Note:
# - inputs.* should be manually mapped to INPUT_* due to https://github.com/actions/runner/issues/665
# - Use GITHUB_*/RUNNER_* instead of github.*/runner.* due to https://github.com/actions/runner/issues/2185
runs:
  using: composite
  steps:
    - run: |
        git config --global --add safe.directory "$(pwd)"
        git init
        GITHUB_PROTOCOL="${GITHUB_SERVER_URL%%://*}"
        GITHUB_HOSTNAME="${GITHUB_SERVER_URL#*://}"
        GIT_USERNAME="dummy"
        git config --global credential.helper store
        echo "${GITHUB_PROTOCOL}://${GIT_USERNAME}:${INPUT_TOKEN:-${GITHUB_TOKEN}}@${GITHUB_HOSTNAME}" >> ~/.git-credentials
        git remote add origin "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
        git config --local gc.auto 0

        if [[ "${GITHUB_REF}" == "refs/heads/"* ]]; then
          branch="${GITHUB_REF#refs/heads/}"
          remote_ref="refs/remotes/origin/${branch}"
          git fetch --no-tags --no-recurse-submodules --depth=1 origin "+${GITHUB_SHA}:${remote_ref}"
          git checkout --force -B "${branch}" "${remote_ref}"
        else
          git fetch --no-tags --no-recurse-submodules --depth=1 origin "+${GITHUB_SHA}:${GITHUB_REF}"
          git checkout --force "${GITHUB_REF}"
        fi

      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
        INPUT_TOKEN: ${{ inputs.token }}

    - run: |
        HOMEDIR=$(getent passwd $(id -u) | cut -d: -f6)
        mkdir -p $HOMEDIR/.ssh
        echo "${{ inputs.ssh_private_key }}" > $HOMEDIR/.ssh/id_rsa
        chmod 0600 $HOMEDIR/.ssh/id_rsa
        eval $(ssh-agent -s)
        ssh-add
        ssh-keyscan github.com >> $HOMEDIR/.ssh/known_hosts
      if: ${{ inputs.ssh_private_key }}
      shell: bash

    - run: |
        rm ~/.git-credentials
      if: ${{ ! inputs.persist_credentials }}
      shell: bash
